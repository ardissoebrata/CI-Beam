<?php

namespace Doctrine\ORM;

require_once dirname(__FILE__) . '/../../../../../../application/third_party/doctrine2-orm/Doctrine/ORM/ORMException.php';

/**
 * Test class for ORMException.
 * Generated by PHPUnit on 2012-03-18 at 15:23:21.
 */
class ORMExceptionTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var ORMException
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new ORMException;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		
	}

	/**
	 * @todo Implement testMissingMappingDriverImpl().
	 */
	public function testMissingMappingDriverImpl()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testEntityMissingForeignAssignedId().
	 */
	public function testEntityMissingForeignAssignedId()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testEntityMissingAssignedIdForField().
	 */
	public function testEntityMissingAssignedIdForField()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testUnrecognizedField().
	 */
	public function testUnrecognizedField()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidOrientation().
	 */
	public function testInvalidOrientation()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidFlushMode().
	 */
	public function testInvalidFlushMode()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testEntityManagerClosed().
	 */
	public function testEntityManagerClosed()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidHydrationMode().
	 */
	public function testInvalidHydrationMode()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testMismatchedEventManager().
	 */
	public function testMismatchedEventManager()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testFindByRequiresParameter().
	 */
	public function testFindByRequiresParameter()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidFindByCall().
	 */
	public function testInvalidFindByCall()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidFindByInverseAssociation().
	 */
	public function testInvalidFindByInverseAssociation()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidResultCacheDriver().
	 */
	public function testInvalidResultCacheDriver()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testNotSupported().
	 */
	public function testNotSupported()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testQueryCacheNotConfigured().
	 */
	public function testQueryCacheNotConfigured()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testMetadataCacheNotConfigured().
	 */
	public function testMetadataCacheNotConfigured()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testProxyClassesAlwaysRegenerating().
	 */
	public function testProxyClassesAlwaysRegenerating()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testUnknownEntityNamespace().
	 */
	public function testUnknownEntityNamespace()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testInvalidEntityRepository().
	 */
	public function testInvalidEntityRepository()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testMissingIdentifierField().
	 */
	public function testMissingIdentifierField()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

}

?>
